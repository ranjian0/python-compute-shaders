{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"box",
				"boxes"
			],
			[
				"num",
				"num_boxes"
			],
			[
				"scat",
				"scattered_ray"
			],
			[
				"ma",
				"material_id"
			],
			[
				"MAT",
				"MATERIAL_DIELECTRIC"
			],
			[
				"tra",
				"trace_once"
			],
			[
				"ray",
				"ray_scene_hit"
			],
			[
				"nu",
				"num_spheres"
			],
			[
				"hit",
				"hit_anything"
			],
			[
				"bo",
				"boxes"
			],
			[
				"ref",
				"ref_idx"
			],
			[
				"refra",
				"refracted"
			],
			[
				"vec",
				"vec3"
			],
			[
				"scatte",
				"scattered_ray"
			],
			[
				"nr",
				"normalize"
			],
			[
				"cre",
				"create_ray"
			],
			[
				"sca",
				"scattered_ray"
			],
			[
				"ran",
				"random_in_unit_sphere"
			],
			[
				"mater",
				"material_id"
			],
			[
				"last",
				"last_y"
			],
			[
				"la",
				"last_x"
			],
			[
				"y",
				"yoffset"
			],
			[
				"cam",
				"camera_moved"
			],
			[
				"Ca",
				"CameraMovement"
			],
			[
				"tex",
				"tex_coord"
			],
			[
				"te",
				"tex_coord"
			],
			[
				"compute",
				"compute_ray"
			],
			[
				"u_",
				"u_InvProjectionMat"
			],
			[
				"get",
				"get_view_matrix"
			],
			[
				"set_",
				"set_mat4"
			],
			[
				"comput",
				"compute_program"
			],
			[
				"uni",
				"uniform"
			],
			[
				"fra",
				"framebuffer"
			],
			[
				"acu",
				"accum_program"
			],
			[
				"re",
				"result"
			],
			[
				"sampl",
				"samples"
			],
			[
				"ac",
				"accum_tex"
			],
			[
				"set",
				"set_int"
			],
			[
				"sample",
				"sampler2D"
			],
			[
				"unfir",
				"uniform"
			],
			[
				"random",
				"random_vector"
			],
			[
				"Vector",
				"Vector3"
			],
			[
				"ima",
				"image2D"
			],
			[
				"refle",
				"reflected"
			],
			[
				"in",
				"in_ray"
			],
			[
				"no",
				"normal"
			],
			[
				"norm",
				"normals"
			],
			[
				"xy",
				"xyCoef"
			],
			[
				"inter",
				"interRelative"
			],
			[
				"NUM",
				"NUM_SPHERES"
			],
			[
				"inf",
				"infinity"
			],
			[
				"vc",
				"vec3"
			],
			[
				"Ve",
				"vec3"
			],
			[
				"ine",
				"intersect_scene"
			],
			[
				"sc",
				"scatter_lambertian"
			],
			[
				"di",
				"dist_to_point"
			],
			[
				"V",
				"Vector4"
			],
			[
				"Vec",
				"vec3"
			],
			[
				"st",
				"store_buffer_as_int"
			],
			[
				"buf",
				"buffer_size"
			],
			[
				"c_",
				"c_char_p"
			],
			[
				"out",
				"out_buffer"
			],
			[
				"GL",
				"GL_ARRAY_BUFFER"
			],
			[
				"gl",
				"glBindBuffer"
			],
			[
				"from",
				"fromarray"
			],
			[
				"wri",
				"write_gif"
			],
			[
				"bin",
				"bind_storage_buffer"
			],
			[
				"bu",
				"buf_data"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"si",
				"size"
			],
			[
				"unfr",
				"uniform"
			],
			[
				"glBi",
				"glBindVertexArray"
			],
			[
				"glBin",
				"glBindTexture"
			],
			[
				"va",
				"vao"
			],
			[
				"wo",
				"work_group_size_y"
			],
			[
				"GL_RG",
				"GL_RGBA32F"
			],
			[
				"inve",
				"inverse_projection_view"
			],
			[
				"SRC",
				"SCR_HEIGHT"
			],
			[
				"Cam",
				"Camera"
			],
			[
				"qua",
				"quad_program"
			],
			[
				"quad",
				"quad_verts"
			],
			[
				"com",
				"compute_program"
			],
			[
				"S",
				"SCR_HEIGHT"
			],
			[
				"sha",
				"shaders"
			],
			[
				"Com",
				"ComputeShader"
			],
			[
				"emi",
				"emission_map"
			],
			[
				"ligh",
				"lighting_shader"
			],
			[
				"Fra",
				"FragColor"
			],
			[
				"spe",
				"specular"
			],
			[
				"view",
				"viewDir"
			],
			[
				"li",
				"lightDir"
			],
			[
				"Fr",
				"FragPos"
			],
			[
				"T",
				"TexCoords"
			],
			[
				"material",
				"material.diffuse"
			],
			[
				"sam",
				"sampler2D"
			],
			[
				"sp",
				"specular"
			],
			[
				"mat",
				"material.specular"
			],
			[
				"fo",
				"format_"
			],
			[
				"load",
				"load_texture"
			],
			[
				"loa",
				"load_texture"
			],
			[
				"am",
				"ambient_color"
			],
			[
				"light",
				"light_color"
			],
			[
				"sh",
				"shininess"
			],
			[
				"vi",
				"viewPos"
			],
			[
				"n",
				"normalize"
			],
			[
				"normal",
				"normalize"
			],
			[
				"No",
				"Normal"
			],
			[
				"v",
				"vec3"
			],
			[
				"amb",
				"ambient"
			],
			[
				"diff",
				"diffuse"
			],
			[
				"cube",
				"cube_vao"
			],
			[
				"object",
				"objectColor"
			],
			[
				"pro",
				"projection"
			],
			[
				"las",
				"last_frame"
			],
			[
				"light_",
				"light_vao"
			],
			[
				"cu",
				"cube_vao"
			],
			[
				"lig",
				"light_pos"
			],
			[
				"lam",
				"lamp_shader"
			],
			[
				"lamp",
				"lamp_shader"
			],
			[
				"set_vec",
				"set_vec3"
			],
			[
				"glGe",
				"glGetUniformLocation"
			],
			[
				"glEna",
				"glEnableVertexAttribArray"
			],
			[
				"glBind",
				"glBindVertexArray"
			],
			[
				"cor",
				"cross"
			],
			[
				"up",
				"update_camera_vectors"
			],
			[
				"con",
				"constrain_pitch"
			],
			[
				"mou",
				"mouse_sensitivity"
			],
			[
				"M",
				"mouse_sensitivity"
			]
		]
	},
	"buffers":
	[
		{
			"file": "demo_pathtracer.py",
			"settings":
			{
				"buffer_size": 5676,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "shaders/pathtracer/tracer_cs.glsl",
			"settings":
			{
				"buffer_size": 13690,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "shaders/pathtracer/tracer_fs.glsl",
			"settings":
			{
				"buffer_size": 202,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Codestyle Black",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Unittest"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		],
		[
			[
				[
					"Codestyle::Black",
					""
				],
				[
					"Codestyle::Black::Diff",
					""
				],
				[
					"Discover Unittest",
					""
				]
			],
			[
				"Discover Unittest",
				""
			]
		],
		[
			[
				[
					"Codestyle::Black",
					""
				],
				[
					"Codestyle::Black::Diff",
					""
				],
				[
					"Discover Unittest",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Unittest"
				]
			],
			[
				"Discover Unittest",
				""
			]
		],
		[
			[
				[
					"Codestyle::Black",
					""
				],
				[
					"Codestyle::Black::Diff",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Unittest"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Unittest"
			]
		],
		[
			[
				[
					"Codestyle::Black",
					""
				],
				[
					"Codestyle::Black::Diff",
					""
				],
				[
					"Unittest",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Unittest"
				]
			],
			[
				"Codestyle::Black",
				""
			]
		],
		[
			[
				[
					"Codestyle::Black",
					""
				],
				[
					"Codestyle::Black::Diff",
					""
				],
				[
					"Unittest",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Unittest"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Black"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Black::diff"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Unittest"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Unittest"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Unittest"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Black"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Black::diff"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Unittest",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Unittest"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Black"
				],
				[
					"Packages/Python/Python.sublime-build",
					"Black::diff"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Black"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 388.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"dif",
				"Git: Diff Current File"
			],
			[
				"ma",
				"Markdown Preview: Preview in Browser"
			],
			[
				"ad",
				"Git: Add..."
			],
			[
				"di",
				"Git: Diff Current File (Ignore Whitespace)"
			],
			[
				"add",
				"Git: Add All"
			],
			[
				"mar",
				"Markdown Preview: Preview in Browser"
			],
			[
				"git",
				"Git: Add All"
			],
			[
				"gutter",
				"GitGutter: Support Info"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"co",
				"Git: Quick Commit (repo, only already added files)"
			],
			[
				"comm",
				"Git: Quick Commit (repo, only already added files)"
			],
			[
				"com",
				"Git: Quick Commit (repo, only already added files)"
			],
			[
				"res",
				"Git: Reset (hard) HEAD"
			],
			[
				"rese",
				"Git: Reset (hard) HEAD"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"mer",
				"Git: Merge Branch"
			],
			[
				"ch",
				"Git: Change Branch"
			],
			[
				"push",
				"Git: Push Current Branch"
			],
			[
				"cha",
				"Git: Change Branch"
			],
			[
				"commit fi",
				"Git: Quick Commit (current file)"
			],
			[
				"diff",
				"Git: Diff Current File"
			],
			[
				"comit",
				"Git: Quick Commit (current file)"
			],
			[
				"merg",
				"Git: Merge Branch"
			],
			[
				"new",
				"Git: New Branch"
			],
			[
				"reset",
				"Git: Reset (unstage) All"
			],
			[
				"a",
				"Git: Add All"
			],
			[
				"ig",
				"Git: Update Project Ignored Files"
			],
			[
				"indes",
				"Git: Update Project Ignored Files"
			],
			[
				" git",
				"Git: Open..."
			],
			[
				"ign",
				"Git: Update Project Ignored Files"
			],
			[
				"ignore",
				"Git: Update Project Ignored Files"
			],
			[
				"git i",
				"Git: Init"
			],
			[
				"reso",
				"PackageResourceViewer: Open Resource"
			],
			[
				"view",
				"View Package File"
			],
			[
				"build",
				"Build: New Build System"
			],
			[
				"commi",
				"Git: Quick Commit (current file)"
			],
			[
				"commit",
				"Git: Quick Commit (current file)"
			],
			[
				"diif",
				"Git: Diff Current File (Ignore Whitespace)"
			],
			[
				"hi",
				"Git: Commit history"
			],
			[
				"git bra",
				"Git: Change Branch"
			],
			[
				"git re",
				"Git: Reset (hard) HEAD"
			],
			[
				"br",
				"Git: Change Branch"
			],
			[
				"resou",
				"PackageResourceViewer: Open Resource"
			],
			[
				"sta",
				"Git: Stash List"
			],
			[
				"set syntax",
				"Set Syntax: Python"
			],
			[
				"git amm",
				"Set Syntax: Git Commit"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"tag",
				"Git: New Tag"
			],
			[
				"b",
				"Git: New Branch"
			],
			[
				"stage",
				"Git: Reset (unstage) Current File"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"spaces",
				"Indentation: Convert to Spaces"
			],
			[
				"pull",
				"Git: Pull Current Branch"
			],
			[
				"do",
				"Python Docstrings: Unfold"
			],
			[
				"dele",
				"Git: Delete Branch"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"folder",
				"Project: Add Folder"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"bra",
				"Git: Change Branch"
			],
			[
				"chan",
				"Git: Change Branch"
			],
			[
				"pyth",
				"Build With: Python"
			],
			[
				"re",
				"PackageResourceViewer: Extract Package"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Install Package Control"
			]
		],
		"width": 497.0
	},
	"console":
	{
		"height": 532.0,
		"history":
		[
			"sublime",
			"help(sublime)",
			"git_log_all",
			"import git",
			"git",
			"sublime.log_commands(True)",
			"sublime.log_commands()",
			"sublime.log_commands",
			"sublime.show_commands",
			"sublime.show_command",
			"sublime.log",
			"sublime"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/shaders",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/shaders/splat"
	],
	"file_history":
	[
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/camera.py",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/shaders/raytracer/tracer_02.glsl",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/shaders/raytracer/tracer.frag",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/shaders/raytracer/tracer.vert",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/demo_raytracer_01.py",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/shaders/raytracer/tracer_progressive.frag",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/shaders/raytracer/tracer_progressive.vert",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/shaders/raytracer/tracer_01.glsl",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/demo_median5x5.py",
		"/media/ranjian0/Backup/Workspace/projects/python-compute-shaders/README.md",
		"/home/ranjian0/Desktop/python-compute_shaders/demo_raytracer_02.py",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/raytracer/tracer_02.glsl",
		"/home/ranjian0/Desktop/python-compute_shaders/demo_raytracer_01.py",
		"/home/ranjian0/Desktop/python-compute_shaders/demo_splat.py",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/raytracer/tracer_01.glsl",
		"/home/ranjian0/Desktop/python-compute_shaders/demo_median5x5.py",
		"/home/ranjian0/Desktop/python-compute_shaders/shader.py",
		"/home/ranjian0/Desktop/python-compute_shaders/tracer_02.glsl",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/median5X5/median5x5.glsl",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/splat/splat.glsl",
		"/media/ranjian0/Backup/Workspace/scripts/c++/ray-tracer/include/hitable.h",
		"/media/ranjian0/Backup/Workspace/scripts/c++/ray-tracer/include/raytrace.h",
		"/media/ranjian0/Backup/Workspace/scripts/c++/ray-tracer/include/sphere.h",
		"/media/ranjian0/Backup/Workspace/scripts/c++/ray-tracer/include/material.h",
		"/media/ranjian0/Backup/Workspace/scripts/c++/ray-tracer/src/material.cpp",
		"/media/ranjian0/Backup/Workspace/scripts/c++/ray-tracer/include/texture.h",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/raytracer/tracer.glsl",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/raytracer/tracer.frag",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/raytracer/tracer.vert",
		"/home/ranjian0/Desktop/python-compute_shaders/demo_raytracer.py",
		"/home/ranjian0/Desktop/python-compute_shaders/camera.py",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/splat/splat.frag",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/splat.glsl",
		"/home/ranjian0/Desktop/python-compute_shaders/shaders/splat.frag",
		"/home/ranjian0/Desktop/python-compute_shaders/splat_demo.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/4.3.lighting_maps.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/4.3.lighting_maps.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/4.3.lighting_maps_exercise4.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/4.2.lighting_maps.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/4.1.lighting_maps_diffuse_map.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/4.2.lighting_maps_specular_map.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/4.1.lighting_maps.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/4.1.lighting_maps.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/texture.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/7.1.camera_circle.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/7.2.camera_keyboard_dt.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/7.3.camera_mouse_zoom.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/7.4.camera_class.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/6.4.coordinate_systems_exercise1.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/5.1.transformations.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/5.2.transformation_exercise2.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/6.1.coordinate_systems.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/6.2.coordinate_systems_depth.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/6.3.coordinate_systems_multiple.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/3.1.materials.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/3.1.materials.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/2.2.basic_lighting_specular.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/2.1.basic_lighting_diffuse.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/1.colors.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/3.2.materials_exercise1.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/3.1.materials.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/2.2.basic_lighting.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/2.2.basic_lighting.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/camera.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/2.1.basic_lighting.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/2.1.basic_lighting.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/1.lamp.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/1.lamp.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/1.colors.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/shader.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting/shaders/1.colors.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/window.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/7.1.camera.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/7.1.camera.fs",
		"/home/ranjian0/.config/sublime-text-3/Packages/Emmet/Default (Linux).sublime-keymap",
		"/home/ranjian0/.config/sublime-text-3/Packages/BracketHighlighter/Example.sublime-keymap",
		"/home/ranjian0/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/.gitignore",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/6.1.coordinate_systems.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/camera.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/6.1.coordinate_systems.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/camera.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/4.1.textures.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/4.2.textures_combined.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/4.3.textures_exercise1.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/4.4.textures_exercise2.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/4.5.textures_exercise3.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/4.6.textures_exercise4.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/5.1.transform.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/5.1.transform.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/5.1.transformations.py",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/4.6.texture_exercise4.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/4.6.texture_exercise4.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/4.3.texture_exercise1.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/4.2.texture.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/4.2.texture.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/4.3.texture_exercise1.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/4.1.texture.fs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/1.getting_started/shaders/4.1.texture.vs",
		"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/4.1.texture_mix.fs",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_math_geometry.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/vector/vector.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib.sublime-project",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/geometry/plane.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_math_solve.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/geometry/sphere.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/geometry/line.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/vector/vector3.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/vector/vector2.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/geometry/circle.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_math_vector2.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/geometry/segment.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/geometry/point.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/__init__.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/geometry/ray.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_math_vector.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/solve.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/LICENSE",
		"/media/ranjian0/Backup/Workspace/projects/pylib/README.md",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/common.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_math_quaternion.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/quaternion.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/matrix/matrix3.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_math_common.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_math_vector3.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_meta.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/tests/test_signal.py",
		"/media/ranjian0/Backup/Workspace/projects/pylib/pylib/math/geometry/__init__.py"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 100.0,
		"where_history":
		[
			"/media/ranjian0/Backup/Workspace/projects/learn-opengl-python/2.lighting",
			"."
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"i",
			"4",
			"5",
			"32",
			"2",
			"0",
			"samplesPerPixel",
			"kPI",
			"tNear",
			"camera_moved = True",
			";",
			"f",
			"trace",
			"tex",
			"eps_margin",
			".n",
			".p",
			"float",
			"seed",
			"SHADER_STORAGE_BUFFER",
			"GL_",
			"gl",
			";",
			"in_buffer_size",
			"f",
			"splat",
			";",
			"GL_",
			"gl",
			"1.0",
			"filter_method",
			"wrap_method",
			"f",
			".astype('f4').tobytes()",
			"astype('f4').tobytes()",
			".astype('f4').tobytes()",
			"light.",
			"light",
			"f",
			"0f",
			"f",
			"self.",
			"f",
			"Vector3(",
			"translation",
			"matrix44.",
			"Matrix44",
			"math.radians(",
			"f",
			"glm::vec3",
			"f",
			"vert",
			"model",
			"gl.GL_LINEAR",
			"gl.GL_REPEAT",
			"texture",
			"numpy",
			"magnitude_squared",
			"import",
			"unit",
			"cross_product",
			"dot_product",
			"circle",
			"line_c",
			"segment_b",
			"Segment2",
			"segment_a",
			"line_a",
			"segment_a",
			"ints_b",
			"ints_a",
			"ray",
			"circle",
			"second",
			"first",
			"double",
			"y1",
			"x2",
			"x1",
			"v2",
			"v1",
			"degrees",
			"hypot",
			"_max",
			"_min",
			"it",
			"slerp",
			"maxIt",
			"bac_sqrt",
			"Vector2",
			"r2",
			"list",
			"tmax",
			"tmin",
			"it",
			"lo",
			"d",
			"add",
			"lt",
			"Line",
			"self",
			"A",
			"self",
			"A",
			"self",
			"A",
			"radians",
			"ceil",
			"T",
			"theta",
			"normal",
			"other",
			"zx",
			"yx",
			"xy",
			"hypot(self.x, self.y)",
			"Vector2",
			"add",
			"list",
			"l",
			"spheres",
			"bvh_node",
			"BVH",
			"bvh_node",
			"bonding",
			"i++",
			"list",
			"min"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Vector",
			"Vector3",
			"_padding",
			"padding"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "demo_pathtracer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5676,
						"regions":
						{
						},
						"selection":
						[
							[
								2099,
								2099
							]
						],
						"settings":
						{
							"SL.13.region_keys":
							[
								"SL.flake8.Highlights.|342126c3715fc271ba51429f54db691da84014e58ff61ca6b16f229ec445340d|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|99d5af7180dc7727e5c63f7e7d8bd6169c012b517da602c6d88c1ad176591721|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|c0dcea92df0c2518021ed357ae27b9da112577e80d7212515691f7b59cbca974|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|283e3f58a9d32156e44e32f5361e1a62964c52dd47de1c6a818aa3fd6900cfa9|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|26c629e1b950aa7fd3ad2af6460b0d77a3293ad5ab611595b9380b85adf2f918|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|1d0233f5c435e68d31b95f2dc121806c8f031c423d6a46aa853bf8b4de553e17|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|47cd0f40fb806c36c65d6d743dde2da017d25d70c276229cedc9c04f302e8800|region.yellowish markup.warning.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.flake8.Highlights.|5d0d111eb1f914181755e065cc190b72c40374ebfd67358606b3b788eee18b3e|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"SL.flake8.Highlights.|3e51e37b70ea032687d7b49e0a91427071cd994437183ceb135f0f1fd92bed0d|region.yellowish markup.warning.sublime_linter|32"
							],
							"SL.28.region_keys":
							[
								"SL.flake8.Highlights.|2ffd1e98009b7c66a900f089388cf7d2d73bef80393abb0a831e63973e8e979f|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|062c9870138e1bbaeacc42460e9e466faf8657fe6763a81901812f2e3d71061b|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|71912947024309cf9a7ec824b155fc06bb5130ec7dcfa96d8f5c5331f8f4acbf|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|743bba90bd9d3ecffdcd9ee24ba87b0165d5552a582491491101e935491c64c1|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|7d843a8f52b6245b494c674574f9da9a2a2f0131262b1646d12bd10110805929|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|5705c58a39d81968a79815212e32f515d82c2824c90cd60a050d78b8e34f8a27|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"SL.flake8.Highlights.|841cd432bc9495c3c805b0c6708fc95b7023933758a18825cfbe0ac508bb0a7a|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|d558dfe363fa86d4bc767052cbfd25d31305c8e542134c1e620b5f720271d6f2|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|70cd1c437d3837447d8ab06d910ab8f494fa03cfe0c03bde819b2c0b795ded9c|region.yellowish markup.warning.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.flake8.Highlights.|07bc3c39a1b01479103793b376f9e72537e3034c23a110935839a7703634f4bd|region.yellowish markup.warning.sublime_linter|32"
							],
							"SL.32.region_keys":
							[
								"SL.flake8.Highlights.|0ca3dfdd3ce98f6d1712d3f3baa3b3591f0d2472dd9af2c3d751487e34f127b4|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"SL.flake8.Highlights.|0ace88cdd67800adc0cde1613ea9abacdfa2a3163f8a8bd7c9dfeae91ec80900|region.yellowish markup.warning.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.flake8.Highlights.|93140e2a5af5b30ee70148126bb5b0eba92df4c86ff0309c7a621fdef77bf119|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|84f810154dc1cc909af785f0b43472e06b23bd978c15bc0f1cccc1a1be78cdfa|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|734f9caa51341bb5a87e997dee152f60566d277485ae6a37ebe4b4297cf0e319|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|a6b5f213aa0d0e3b2966ef6e4dd88d14a202fc5912ba257439167ad97736ed81|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|422911f6698b9d7a467e1224bc214de7b26e078b9e4248593a0303c034c1a6e9|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|4edd6ef8c0a96c8e34b13139b3e419bd6bf594e9ec1a41777bb59877d2bdbb77|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|d002ef40f092ec6088da00b8b7f558b14eb2909802cc506b471f077266a3b8d4|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|f8759648ad5ae4a97b58ead6b839b29d89550c1b91003a05814015e24517b187|region.yellowish markup.warning.sublime_linter|32"
							],
							"SL.43.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.flake8.Highlights.|c1ab7801fa25db895506f6c3d955698d2661c66f8d807e839a46c87a3ce92c55|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|fd7b5af49c201a2e726c94d65253ab7c37369d0df8bfa110785be7fc3875c7c8|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|7c73368e39316d9d68422b2032a07914ac3bbcfe12a5ea44d620b44c79c4aee8|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"SL.flake8.Highlights.|f3c3a610b36e8032eb8fc0817a8916465bdb9d1a6207dd9d57a79dd5b6d37e1f|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|2823593479f84de504bb457547afaed3422899a45ffa44e2c61be59631dbe8ce|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|51cf84f71c31eebd32786bbe5a70d0a602dc41183ba60bf5ebb78f4d25b608ca|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|f5917b44ece2b7e5834ccb0b4becd719c395beb25b4448cc65c06ff54d0f9140|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|c1012b07a2d7774378103c3b294fca9af7a6facb156a5fa84df9c75b71cc2682|region.yellowish markup.warning.sublime_linter|32",
								"SL.flake8.Highlights.|cb52582e08a924d0a576f346b3cdef6b34fa9fff1a1e9e10cee4ba7a173af71b|region.yellowish markup.warning.sublime_linter|32"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										4088,
										4089
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										4073,
										4074
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2166,
										2167
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2096,
										2097
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 788.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "shaders/pathtracer/tracer_cs.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13690,
						"regions":
						{
						},
						"selection":
						[
							[
								10024,
								10024
							]
						],
						"settings":
						{
							"SL.64.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										7993,
										7994
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										7868,
										7869
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										10026,
										10027
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										10022,
										10023
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5419.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "shaders/pathtracer/tracer_fs.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 202,
						"regions":
						{
						},
						"selection":
						[
							[
								150,
								150
							]
						],
						"settings":
						{
							"SL.63.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										198,
										199
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										90,
										91
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										201,
										202
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										90,
										91
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 186.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 242.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "python-compute-shaders.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"tra",
				"shaders/raytracer/tracer.vert"
			],
			[
				"ca",
				"camera.py"
			],
			[
				"de",
				"demo_raytracer_01.py"
			],
			[
				"sh",
				"shader.py"
			],
			[
				"spl",
				"shaders/splat/splat.glsl"
			],
			[
				"dem",
				"demo_splat.py"
			],
			[
				"",
				"shaders/splat.frag"
			],
			[
				"4.1.l",
				"2.lighting/4.1.lighting_maps_diffuse_map.py"
			],
			[
				"4.2",
				"2.lighting/shaders/4.2.lighting_maps.fs"
			],
			[
				"te",
				"texture.py"
			],
			[
				"sha",
				"shader.py"
			],
			[
				"7.1",
				"1.getting_started/shaders/7.1.camera.fs"
			],
			[
				"win",
				"window.py"
			],
			[
				"wi",
				"window.py"
			],
			[
				"pl",
				"pylib/math/geometry/plane.py"
			],
			[
				"ve",
				"pylib/math/vector/vector2.py"
			],
			[
				"vec",
				"pylib/math/vector/vector.py"
			],
			[
				"sp",
				"pylib/math/geometry/sphere.py"
			],
			[
				"li",
				"pylib/math/geometry/line.py"
			],
			[
				"line",
				"pylib/math/geometry/line.py"
			],
			[
				"ci",
				"pylib/math/geometry/circle.py"
			],
			[
				"pla",
				"pylib/math/geometry/plane.py"
			],
			[
				"seg",
				"pylib/math/geometry/segment.py"
			],
			[
				"po",
				"pylib/math/geometry/point.py"
			],
			[
				"cir",
				"pylib/math/geometry/circle.py"
			],
			[
				"ray",
				"pylib/math/geometry/ray.py"
			],
			[
				"lin",
				"pylib/math/geometry/line.py"
			],
			[
				"sol",
				"pylib/math/solve.py"
			],
			[
				"l",
				"LICENSE"
			],
			[
				"ma",
				"pylib/math/matrix/matrix3.py"
			],
			[
				"qu",
				"pylib/math/quaternion.py"
			],
			[
				"co",
				"pylib/math/common.py"
			],
			[
				"v",
				"pylib/math/vector/vector3.py"
			],
			[
				"__",
				"__init__.py"
			],
			[
				"b",
				"src/bvh.cpp"
			],
			[
				"bv",
				"include/bvh.h"
			],
			[
				"aa",
				"src/aabb.cpp"
			],
			[
				"m",
				"main.cpp"
			],
			[
				"ra",
				"include/raytrace.h"
			],
			[
				"cm",
				"CMakeLists.txt"
			],
			[
				"pp",
				"include/ppm_write.h"
			],
			[
				"c",
				"include/camera.h"
			],
			[
				"h",
				"src/hitable_list.cpp"
			],
			[
				"hi",
				"include/hitable_list.h"
			],
			[
				"a",
				"src/aabb.cpp"
			],
			[
				"hita",
				"src/hitable_list.cpp"
			],
			[
				"hit",
				"include/hitable.h"
			],
			[
				"mate",
				"src/material.cpp"
			],
			[
				"s",
				"src/sphere.cpp"
			],
			[
				"cam",
				"src/camera.cpp"
			],
			[
				"mat",
				"src/material.cpp"
			],
			[
				"fra",
				"core/gui/frame.py"
			],
			[
				"ga",
				"game.py"
			],
			[
				"la",
				"core/gui/widget_label.py"
			],
			[
				"fr",
				"core/gui/frame.py"
			],
			[
				"el",
				"core/gui/_element.py"
			],
			[
				"ele",
				"core/gui/_element.py"
			],
			[
				"f",
				"core/gui/frame.py"
			],
			[
				"ap",
				"core/app.py"
			],
			[
				"ut",
				"core/utils.py"
			],
			[
				"gui",
				"core/gui/gui_element.py"
			],
			[
				"sc",
				"core/scene.py"
			],
			[
				"lay",
				"core/gui/layout.py"
			],
			[
				"sce",
				"core/scene.py"
			],
			[
				"col",
				"core/collection.py"
			],
			[
				"ui",
				"core/ui.py"
			],
			[
				"en",
				"core/entity/entity.py"
			],
			[
				"app",
				"core/app.py"
			],
			[
				"map",
				"core/object/map.py"
			],
			[
				"ph",
				"core/physics.py"
			],
			[
				"pr",
				"core/object/projectile.py"
			],
			[
				"g",
				"game.py"
			],
			[
				"uti",
				"core/utils.py"
			],
			[
				"edi",
				"editor.py"
			],
			[
				"sce\t",
				"core/scene.py"
			],
			[
				"gae",
				"game.py"
			],
			[
				"pro",
				"core/object/projectile.py"
			],
			[
				"enti",
				"core/entity/entity.py"
			],
			[
				"game",
				"game.py"
			],
			[
				"scen",
				"core/scene.py"
			],
			[
				"gam",
				"game.py"
			],
			[
				"p\t",
				"core/physics.py"
			],
			[
				"coll",
				"core/collection.py"
			],
			[
				"ene",
				"core/entity/enemy.py"
			],
			[
				"rp",
				"core/object/projectile.py"
			],
			[
				"p",
				"core/physics.py"
			],
			[
				"u",
				"core/utils.py"
			],
			[
				"re",
				"resources/__init__.py"
			],
			[
				"t",
				"test.py"
			],
			[
				"e",
				"core/event.py"
			],
			[
				"phy",
				"core/physics.py"
			],
			[
				"h\t",
				"core/physics.py"
			],
			[
				"test",
				"test.py"
			],
			[
				"hy",
				"core/physics.py"
			],
			[
				"util",
				"core/utils.py"
			],
			[
				"eni",
				"core/entity/entity.py"
			],
			[
				"__in",
				"core/entity/__init__.py"
			],
			[
				"eve",
				"core/event.py"
			],
			[
				"en\t",
				"engine/engine.py"
			],
			[
				"di",
				"widgets/dialog.py"
			],
			[
				"bu\t",
				"widgets/button.py"
			],
			[
				"ba",
				"base.py"
			],
			[
				"def",
				"themes/default.json"
			],
			[
				"conta",
				"container.py"
			],
			[
				"pa",
				"pg_panel.py"
			],
			[
				"floo",
				"core/floor/floor.py"
			],
			[
				"gene",
				"core/generic.py"
			],
			[
				"floorp",
				"core/floorplan/floorplan_ops.py"
			],
			[
				"floorpl",
				"core/floorplan/floorplan_ops.py"
			],
			[
				"roof",
				"core/roof/roof_props.py"
			],
			[
				"util_s",
				"utils/util_skeleton.py"
			],
			[
				"util_sk",
				"utils/util_skeleton.py"
			],
			[
				"floorpla",
				"core/floorplan/floorplan_types.py"
			],
			[
				"rai",
				"core/rails/rails_props.py"
			],
			[
				"ev",
				"core/event.py"
			],
			[
				"rail",
				"core/rails/rails_types.py"
			],
			[
				"doo",
				"core/door/door_types.py"
			],
			[
				"bal",
				"core/balcony/balcony_types.py"
			],
			[
				"ops",
				"core/window/window_ops.py"
			],
			[
				"op",
				"core/balcony/balcony_ops.py"
			],
			[
				"tr",
				"triggered.py"
			],
			[
				"to",
				"TODO.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 106.0,
		"last_filter": "__repr__",
		"selected_items":
		[
			[
				"__repr__",
				"__repr__"
			]
		],
		"width": 574.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 289.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
